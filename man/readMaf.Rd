% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readMaf.R
\name{readMaf}
\alias{readMaf}
\title{MAF/CCF/Sample_info Reader}
\usage{
readMaf(mafFile, sampleInfoFile, vafColumn = "VAF", mutType = "All",
  mutNonSilent = NULL, chrSilent = NULL, use.indel = FALSE,
  ccfClusterTsvFile = NULL, ccfLociTsvFile = NULL, refBuild = "hg19")
}
\arguments{
\item{mafFile}{MAF file.}

\item{sampleInfoFile}{sample_info.txt file.}

\item{vafColumn}{Default "VAF. You can select the column containing VAF values by the column name.}

\item{mutType}{Default "All". "nonSilent" And you can select proper variant classification you need.}

\item{mutNonSilent}{Default NULL. And you can list variant classifications that you do not want them to be silent.}

\item{chrSilent}{Default NULL. select the chromosomes you want to dismiss.}

\item{use.indel}{Seclet SNP in Variant type}

\item{ccfClusterTsvFile}{CCF cluster.tsv file if ccf data provided. Default NULL.}

\item{ccfLociTsvFile}{CCF loci.tsv file if ccf data provided. Default NULL.}

\item{refBuild}{Default "hg19". You could choose human reference genome versions of hg19 or hg38 by UCSC.}
}
\value{
a classMaf object/class includes information of sample_info and 
mut.id and summary figure of it
}
\description{
Add sample information and ccf data to the original maf file 
to get a new maf. The new maf data adds three pieces of information:lesion, 
patient and time.
}
\examples{
## data information
maf.File <- system.file("extdata/multi_lesion/maf", "311252.maf", package = "Meskit")
sampleInfo.File <- system.file("extdata/multi_lesion", "sample_info.txt", package = "Meskit")
pyCloneCluster <- system.file("extdata/multi_lesion/ccf", "311252.cluster.tsv", package = "Meskit")
pyCloneLoci <- system.file("extdata/multi_lesion/ccf", "311252.loci.tsv", package = "Meskit")
## manually usage
maf <- readMaf(mafFile=maf.File, sampleInfoFile=sampleInfo.File, refBuild="hg19")
## if ccf data provided
maf <- readMaf(mafFile=maf.File, sampleInfoFile=sampleInfo.File, ccfClusterTsvFile=pyCloneCluster, ccfLociTsvFile=pyCloneLoci, refBuild="hg19")

}
